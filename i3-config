# i3 config file (v4)
#
# This is Paul's i3-gaps config file
# Things are still being optimized
# Dependencies:
#   compton - for window transparency, etc
#   volumeicon-alsa - volume widget
#   i3-battery-popup - https://github.com/rjekker/i3-battery-popup
#   scrot - screenshots
#   i3-exit from https://github.com/uranix/i3-settings/blob/master/i3-exit
#   feh - background and image viewer 
#   xautolock - auto screensaver 
#   i3-exit - https://github.com/uranix/i3-settings/blob/master/i3-exit
#   
# If you have a multi monitor setup, create a script ~/Desktop/configure_monitors.sh
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

#set mod to windows key
set $mod Mod4

#set $lmonitor "DP-1-1"
#set $rmonitor "DP-1-2"
#set $lastmonitor "eDP-1"

###### SCRIPTS TO RUN ON I3 STARTUP ###########
#setup external monitors
exec --no-startup-id ~/Desktop/configure_monitors.sh
exec --no-startup-id compton -b #Xorg window compositor, for window transparency, etc
#exec --no-startup-id nm-applet #Network connection manager and tray icon
#exec --no-startup-id volumeicon #ALSA mixer volume icon in tray

exec --no-startup-id i3-battery-popup -n -i /usr/local/share/i3-battery-popup

#mouse touchpad configuration
exec --no-startup-id synclient ClickFinger3=2 #enable 3 finger 
exec --no-startup-id synclient TapButton3=2 #set 3 finger click to middle mouse
exec --no-startup-id synclient MaxTapTime=0 #turn off tap to click
exec --no-startup-id synclient VertEdgeScroll=0 #turn off vertical scroll on right side of touchpad
exec --no-startup-id synclient HorizTwoFingerScroll=1 #turn on horizontal scroll
#just type synclient in terminal to see list of options
# note: it may be smarter to move this section to xorg.conf, but that's scarier than this way


###### GENERAL I3 SETTINGS #################

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec termite

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop 
# or you could use rofi
#bindsym $mod+d exec --no-startup-id rofi -show run  #run mode
bindsym $mod+d exec --no-startup-id rofi -show drun  #desktop run mode (uses desktop names instead of executable names)
bindsym $mod+Shift+d exec --no-startup-id rofi -show window  #window switcher mode 

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
# right now mod+d is bound to my application launcher, so consider rebinding this
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
set $ws20 "20"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
bindsym $mod+Mod1+1 workspace $ws11
bindsym $mod+Mod1+2 workspace $ws12
bindsym $mod+Mod1+3 workspace $ws13
bindsym $mod+Mod1+4 workspace $ws14
bindsym $mod+Mod1+5 workspace $ws15
bindsym $mod+Mod1+6 workspace $ws16
bindsym $mod+Mod1+7 workspace $ws17
bindsym $mod+Mod1+8 workspace $ws18
bindsym $mod+Mod1+9 workspace $ws19
bindsym $mod+Mod1+0 workspace $ws20

#i like to use alt-tab a lot 
bindsym Mod1+Tab workspace back_and_forth
bindsym Mod1+Shift+Tab workspace next

workspace_auto_back_and_forth yes

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10
bindsym $mod+Mod1+Shift+1 move container to workspace $ws11
bindsym $mod+Mod1+Shift+2 move container to workspace $ws12
bindsym $mod+Mod1+Shift+3 move container to workspace $ws13
bindsym $mod+Mod1+Shift+4 move container to workspace $ws14
bindsym $mod+Mod1+Shift+5 move container to workspace $ws15
bindsym $mod+Mod1+Shift+6 move container to workspace $ws16
bindsym $mod+Mod1+Shift+7 move container to workspace $ws17
bindsym $mod+Mod1+Shift+8 move container to workspace $ws18
bindsym $mod+Mod1+Shift+9 move container to workspace $ws19
bindsym $mod+Mod1+Shift+0 move container to workspace $ws20

#move (rename) entire workspace
bindsym $mod+Shift+Control+1 rename workspace to 1
bindsym $mod+Shift+Control+2 rename workspace to 2
bindsym $mod+Shift+Control+3 rename workspace to 3
bindsym $mod+Shift+Control+4 rename workspace to 4
bindsym $mod+Shift+Control+5 rename workspace to 5
bindsym $mod+Shift+Control+6 rename workspace to 6
bindsym $mod+Shift+Control+7 rename workspace to 7
bindsym $mod+Shift+Control+8 rename workspace to 8
bindsym $mod+Shift+Control+9 rename workspace to 9
bindsym $mod+Shift+Control+0 rename workspace to 10
bindsym $mod+Mod1+Shift+Control+1 rename workspace to 11
bindsym $mod+Mod1+Shift+Control+2 rename workspace to 12
bindsym $mod+Mod1+Shift+Control+3 rename workspace to 13
bindsym $mod+Mod1+Shift+Control+4 rename workspace to 14
bindsym $mod+Mod1+Shift+Control+5 rename workspace to 15
bindsym $mod+Mod1+Shift+Control+6 rename workspace to 16
bindsym $mod+Mod1+Shift+Control+7 rename workspace to 17
bindsym $mod+Mod1+Shift+Control+8 rename workspace to 18
bindsym $mod+Mod1+Shift+Control+9 rename workspace to 19
bindsym $mod+Mod1+Shift+Control+0 rename workspace to 20

# set workspaces to different monitors
workspace $ws1 output $lmonitor
workspace $ws2 output $lmonitor
workspace $ws3 output $lmonitor
workspace $ws4 output $lmonitor
workspace $ws5 output $lmonitor
workspace $ws6 output $rmonitor
workspace $ws7 output $rmonitor
workspace $ws8 output $rmonitor
workspace $ws9 output $rmonitor
workspace $ws10 output $rmonitor
workspace $ws11 output $lastmonitor
workspace $ws12 output $lastmonitor
workspace $ws13 output $lastmonitor
workspace $ws14 output $lastmonitor
workspace $ws15 output $lastmonitor

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
# Default method using i3-nagbar
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
# fancy method using custom script i3-exit from https://github.com/uranix/i3-settings/blob/master/i3-exit
# i installed i3-exit in /usr/local/bin
#bindsym $mod+Shift+e exec "i3-exit"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        bindsym Shift+h resize shrink width 1 px or 1 ppt
        bindsym Shift+j resize grow height 1 px or 1 ppt
        bindsym Shift+k resize shrink height 1 px or 1 ppt
        bindsym Shift+l resize grow width 1 px or 1 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        bindsym Shift+Left resize shrink width 1 px or 1 ppt
        bindsym Shift+Down resize grow height 1 px or 1 ppt
        bindsym Shift+Up resize shrink height 1 px or 1 ppt
        bindsym Shift+Right resize grow width 1 px or 1 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#background
exec --no-startup-id feh --bg-fill ~/Pictures/wallpapers/arch_background.jpg

#lock
#i made a fancy mod of i3lock called i3lock-m2md
bindsym $mod+F1 exec i3lock-m2md -i ~/Pictures/m2md/m2md_logo_manual_grey.png -t -e -f 
bindsym XF86Sleep exec i3lock-m2md -i ~/Pictures/m2md/m2md_logo_manual_grey.png -t -e -f
exec_always --no-startup-id xautolock -time 10 -locker /usr/local/bin/smart_start_i3lock.sh -corners 0+0- -notify 8 -notifier /usr/local/bin/smart_warn_i3lock.sh &
#bindsym $mod+F1 exec i3lock -i ~/Pictures/m2md/m2md_logo_manual_grey.png -e -f -t
#exec --no-startup-id xautolock -time 5 -locker 'i3lock -i ~/Pictures/m2md/m2md_logo_manual_grey.png -e -f -t' -corners 0+0- & 
# uses a custom script (in applications/ of my dotfiles folder) to detect fullscreen apps and pause xautolock
exec --no-startup-id ~/usr/local/bin/xautolock_lights_on.sh

#screenshots
bindsym Print exec "scrot 'screenshot_%Y-%m-%d-%H:%M:%S.png' -e 'mv $f ~/Pictures/screenshots/'"
bindsym --release $mod+Shift+Print exec "scrot -s 'screenshot_%Y-%m-%d-%H:%M:%S.png' -e 'mv $f ~/Pictures/screenshots/'"
bindsym --release $mod+Print exec "scrot -u -d 1 'screenshot_%Y-%m-%d-%H:%M:%S.png' -e 'mv $f ~/Pictures/screenshots/'"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# i3bar config is under ~/.config/i3status/config
# bar {
    # status_command i3status
	# position top
	# font pango:monospace 11	
# }

# If using polybar 
# polybar config is under ~/.config/polybar/config
# bar {
    # status_command polybar carbo
    # position top
# }
exec_always --no-startup-id ~/.config/polybar/launch.sh


########### Function Key Keybindings ##############
bindsym XF86MonBrightnessUp exec xbacklight -inc 10 
bindsym XF86MonBrightnessDown exec xbacklight -dec 10
#kbdbacklight is for my asus laptop, it probably won't work for your system
bindsym XF86KbdBrightnessUp exec kbdbacklight up #kbdbacklight is a custom script feel free to go mod it
bindsym XF86KbdBrightnessDown exec kbdbacklight down 
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound
bindsym XF86TouchpadToggle exec --no-startup-id toggletouchpad.sh # toggle touchpad


############### i3-gaps stuff ####################

# Necessary for i3-gaps to work properly (pixel can be any value)
for_window [class="^.*"] border pixel 3

# Smart Gaps
smart_gaps on

# Smart Borders
smart_borders on

# Set inner/outer gaps
gaps inner 25 
gaps outer -5

# Gaps mode
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# vim:filetype=i3



# custom windows which should be floating mode by default
# my snake game
for_window [title="^Snake$"] floating enable, resize set 600 px 600 px
